import java.io.File;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

public class PreventCallHomeXXE extends DefaultHandler {
    public static void main(String[] args) throws Exception{

        SAXParserFactory parserFactory = SAXParserFactory.newInstance();
        // parserFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);   // this stops <!DOCTYPE - this will cause a SAXParseException with the callhome.xml payload
        parserFactory.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false); // this calling out to load a DTD
        parserFactory.setFeature("http://xml.org/sax/features/external-general-entities", false);
        parserFactory.setFeature("http://xml.org/sax/features/external-parameter-entities", false); // this stops <!ENTITY % ext - which stops the callhome.xml payload

        parserFactory.setXIncludeAware(false);

        SAXParser parser = parserFactory.newSAXParser();

        // can also set any of the configs below for the reader associated with the parser as well  
        // i.e. reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
        XMLReader reader = parser.getXMLReader();  // I don't actually need this definition atm, in here for demo purposes

        PreventCallHomeXXE handler = new PreventCallHomeXXE();

        if (args.length != 1)
            throw new RuntimeException("The name of the XML file is required!");
        
        parser.parse(new File(args[0]), handler);        
    }
}